using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using MVCDemoApp.Models;
using RestaurantsByAdo.Models;

// For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

namespace RestaurantsByAdo.Controllers
{
    public class RestaurantsController : Controller
    {
        //private RestaurantsDataAccessLayer dataAccess = new RestaurantsDataAccessLayer();
        RestaurantsDataAccessLayer objrestauranttype = new RestaurantsDataAccessLayer();
        private object objRestaurants;
        private object objrestauranttppe;

        // Adding the logic of create View
        [HttpGet]
        public IActionResult Create()
        {
            return View();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Create([Bind] Restaurants restauranttype)
        {
            if (ModelState.IsValid)
            {
                objrestauranttype.AddRestaurants(restauranttype);
                return RedirectToAction("Index");
            }
            return View(restauranttype);
        }
        // GET: /<controller>/
        public IActionResult Index()
        {
            List<Restaurants> lstRestaurants = new List<Restaurants>();
            lstRestaurants = objrestauranttype.GetAllRestaurants().ToList();

            return View(lstRestaurants);
        }

        //Adding the logic of Edit View
        [HttpGet]
        public IActionResult Edit(int? id)
        {
            if (id == null)
            {
                return NotFound();
            }
            Restaurants restauranttype = objrestauranttype.GetRestaurantsData(id);
            if (restauranttype == null)
            {
                return NotFound();
            }
            return View(restauranttype);
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Edit(int id, [Bind]Restaurants restauranttype)
        {
            if (id != restauranttype.ID)
            {
                return NotFound();
            }
            if (ModelState.IsValid)
            {
                objrestauranttype.UpdateRestaurants(restauranttype);
                return RedirectToAction("Index");
            }
            return View(restauranttype);
        }

        //Adding Logic for Details View

        [HttpGet]
        public IActionResult Details(int? id)
        {
            if (id == null)
            {
                return NotFound();
            }
            Restaurants restauranttype = objrestauranttppe.GetRestaurantsData(id);
            if (restauranttype == null)
            {
                return NotFound();
            }
            return View(restauranttype);
        }

        private RestaurantsType GetRestauranttype(int? id)
        {
            return objrestauranttype.GetRestaurantsData(id);
        }

        //Adding Logic to Delete View
        [HttpGet]
        public IActionResult Delete(int? id)
        {
            if (id == null)
            {
                return NotFound();
            }
            Restaurants restauranttype = objrestauranttype.GetRestaurantsData(id);
            if (restauranttype == null)
            {
                return NotFound();
            }
            return View(restauranttype);
        }
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public IActionResult DeleteConfirmed(int? id)
        {
            objrestauranttype.DeleteRestaurants(id);
            return RedirectToAction("Index");
        }
    }
}

//private RestaurantsDataAccessLayer dataAccess = new RestaurantsDataAccessLayer();

        // GET: /<controller>/
        //public IActionResult Index()
        //{
           // IEnumerable<RestaurantsType> restaurantsList =  dataAccess.GetAllRestaurantTypes();
            //return View(restaurantsList);
       // }
   // }
//}



using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using MVCDemoApp.Models;
using RestaurantsByAdo.Models;

namespace RestaurantsByAdo.Controllers
{
    public class RestaurantController : Controller
    {
        private readonly IRestaurantData db;

        public RestaurantController(IRestaurantData db)
        {
            this.db = db;
        }

        [HttpGet]
        public ActionResult Index()
        {
            var model = db.GetAll();
            return View(model);
        }

        [HttpGet]
        public ActionResult Details(int id)
        {
            var model = db.Get(id);
            if (model == null)
            {
                return View("NotFound");
            }
            return View(model);

        }

        [HttpGet]
        public ActionResult Create()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(Restaurant restaurant)
        {

            if (ModelState.IsValid)
            {
                db.Add(restaurant);
                return RedirectToAction("Details", new { id = restaurant.Id });
            }
            return View();
        }

        [HttpGet]
        public ActionResult Edit(int id)
        {
            var model = db.Get(id);
            if (model == null)
            {
                return HttpNotFound();
            }
            return View(model);
        }

        private ActionResult HttpNotFound()
        {
            throw new NotImplementedException();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(Restaurant restaurant)
        {
            if (ModelState.IsValid)
            {
                db.Update(restaurant);
                TempData["Message"] = "You have saved the restaurant!";
                return RedirectToAction("Details", new { id = restaurant.Id });
            }
            return View(restaurant);
        }

        [HttpGet]
        public ActionResult Delete(int id)
        {
            var model = db.Get(id);
            if (model == null)
            {
                return View("NotFound");
            }
            return View(model);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(int id, FormCollection form)
        {
            db.Delete(id);
            return RedirectToAction("Index");
        }

    }
}
